/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/cloud-ark/kubeplus/platform-operator/pkg/apis/workflowcontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PlatformWorkflowLister helps list PlatformWorkflows.
type PlatformWorkflowLister interface {
	// List lists all PlatformWorkflows in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PlatformWorkflow, err error)
	// PlatformWorkflows returns an object that can list and get PlatformWorkflows.
	PlatformWorkflows(namespace string) PlatformWorkflowNamespaceLister
	PlatformWorkflowListerExpansion
}

// platformWorkflowLister implements the PlatformWorkflowLister interface.
type platformWorkflowLister struct {
	indexer cache.Indexer
}

// NewPlatformWorkflowLister returns a new PlatformWorkflowLister.
func NewPlatformWorkflowLister(indexer cache.Indexer) PlatformWorkflowLister {
	return &platformWorkflowLister{indexer: indexer}
}

// List lists all PlatformWorkflows in the indexer.
func (s *platformWorkflowLister) List(selector labels.Selector) (ret []*v1alpha1.PlatformWorkflow, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PlatformWorkflow))
	})
	return ret, err
}

// PlatformWorkflows returns an object that can list and get PlatformWorkflows.
func (s *platformWorkflowLister) PlatformWorkflows(namespace string) PlatformWorkflowNamespaceLister {
	return platformWorkflowNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PlatformWorkflowNamespaceLister helps list and get PlatformWorkflows.
type PlatformWorkflowNamespaceLister interface {
	// List lists all PlatformWorkflows in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PlatformWorkflow, err error)
	// Get retrieves the PlatformWorkflow from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PlatformWorkflow, error)
	PlatformWorkflowNamespaceListerExpansion
}

// platformWorkflowNamespaceLister implements the PlatformWorkflowNamespaceLister
// interface.
type platformWorkflowNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PlatformWorkflows in the indexer for a given namespace.
func (s platformWorkflowNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PlatformWorkflow, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PlatformWorkflow))
	})
	return ret, err
}

// Get retrieves the PlatformWorkflow from the indexer for a given namespace and name.
func (s platformWorkflowNamespaceLister) Get(name string) (*v1alpha1.PlatformWorkflow, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("platformworkflow"), name)
	}
	return obj.(*v1alpha1.PlatformWorkflow), nil
}
