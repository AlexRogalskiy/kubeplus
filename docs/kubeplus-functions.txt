KubePlus Constructs Grammar:
-----------------------------

<Built-in Kind> :: Pod | Service | ...

<Custom Kind> :: Custom Resources introduced by CRDs/Operators

<Type> :: <Built-in Kind> | <Custom Kind>

<Resource-Name> :: metadata.name

<Namespace> :: metadata.namespace

<Fully Qualified Resource Name> :: <Type>:<Namespace>.<Resource-Name>:[<Built-in Resource>][(filter=<filter-predicate>)]
-> If <Built-in Resource> is specified, then <Resource-Name> of that resource
-> If filter predicate is specified, then <Resource-Name> of the resource whose name matches the filter predicate (anywhere) (its a String.contains() based comparison)

<Fully Qualified Property Name> :: <Type>:<Namespace>.<Resource-Name>:[<Built-in Resource>][(filter=<filter-predicate>)].<property-name>[(filter=<filter-predicate>)]
-> If filter predicate specified on <Built-in Resource> then select the Resource whose name matches the filter-predicate
-> If filter predicate specified on <property-name> then select the Spec property whose value matches that filter-predicate

<property-name> :: Any string
-> The Spec of the <Resource-Name> will be searched for the <property-name> and its value will be returned.
-> If multiple values exist for <property-name> then the first one will be returned, unless <filter-predicate> is defined.

<Import String> :: <Fully Qualified Resource Name> | <Fully Qualified Property Name>


Functions:
----------

1. Fn::ImportValue(<Import String>)
   -> Replace Fn::ImportValue() definition by the value obtained by resolving <Import String>

2. Fn::AddLabel(label, <Fully Qualified Resource Name>)
   -> Add label to the specified Fully Qualified Resource Name 
