#!/bin/bash

function podLogs {
	podlist=("$@")
	echo "===Pods==="
        for i in "${podlist[@]}"; do echo "$i"; done
	echo "   "
	if [ ${#podlist[@]} -eq 0 ];
	then
		echo "No Pod found associated with Service $serviceInstance in Namespace $namespace."
	else
        for p in "${podlist[@]}"; do
            python /$KUBEPLUS_HOME/plugins/crlogs.py $p $namespace
        done;
	fi
}

if (( $# < 2 )); then
    echo "kubectl grouplogs service <Service Instance name> <Namespace> [--kubeconfig=<Absolute path to kubeconfig>]"
    exit 0
fi

serviceInstance=$1
namespace=$2

# Only --kubeconfig specified
kubeconfig=~/.kube/config
if [ $# = 3 ] && [[ $3 == *"kubeconfig="* ]]; then
	kubeconfig=$3
fi

#echo $kubeconfig

#if [ $# = 2 ]; then
#   namespace=$2 # If namespace is passed; use that
#fi

python /$KUBEPLUS_HOME/plugins/crlogs.py connections Service $serviceInstance $namespace $kubeconfig

#IFS=$'\n' # field separator: '\n'
#declare -a podlist
#if [[ "$OSTYPE" == "darwin"* ]]; then
#	#podlist=( $($KUBEPLUS_HOME/plugins/kubediscovery-macos connections Service $serviceInstance $namespace -o flat | grep Pod | awk '{print $3}' | cut -d ':' -f2) )
#	#podLogs "${podlist[@]}"
#	service_output=$($KUBEPLUS_HOME/plugins/kubediscovery-macos connections Service $serviceInstance $namespace -o json)
#    python /$KUBEPLUS_HOME/plugins/crlogs.py $service_output $namespace
#elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
#	#podlist=( $($KUBEPLUS_HOME/plugins/kubediscovery-linux connections Service $serviceInstance $namespace -o flat | grep Pod | awk '{print $3}' | cut -d ':' -f2) )
#	#podLogs "${podlist[@]}"
#	service_output=$($KUBEPLUS_HOME/plugins/kubediscovery-linux connections Service $serviceInstance $namespace -o json)
#    python /$KUBEPLUS_HOME/plugins/crlogs.py $service_output $namespace
#else 
#	echo "$OSTYPE not supported."
#fi
