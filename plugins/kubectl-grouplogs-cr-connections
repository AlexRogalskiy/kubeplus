#!/bin/bash -x 

if (( $# < 3 )); then
    echo "kubectl grouplogs cr connections <Custom Resource> <Resource Instance> <Namespace> [--kubeconfig=<Absolute path to kubeconfig>]"
    exit 0
fi

# If namespace is passed; use that
#if [ $# = 3 ]; then

#fi

kind=$1
instance=$2
namespace=$3

# Only --kubeconfig specified
kubeconfig=~/.kube/config
if [ $# = 4 ] && [[ $4 == *"kubeconfig="* ]]; then
    kubeconfig=$4
fi

#echo "$kind $instance $namespace"

python /$KUBEPLUS_HOME/plugins/crlogs.py connections $kind $instance $namespace $kubeconfig

#if [[ "$OSTYPE" == "darwin"* ]]; then
    #podlist=(`$KUBEPLUS_HOME/plugins/kubediscovery-macos connections $kind $instance $namespace -o flat | grep Pod | awk '{print $3}' | sed 's/:/ /'g | awk '{print $2}'`)
    #cr_output=`$KUBEPLUS_HOME/plugins/kubediscovery-macos connections $kind $instance $namespace -o json`
    #echo $cr_output
    #python /$KUBEPLUS_HOME/plugins/crlogs.py $cr_output $namespace
#    python /$KUBEPLUS_HOME/plugins/crlogs.py $kind $instance $namespace
#elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    #podlist=(`$KUBEPLUS_HOME/plugins/kubediscovery-linux connections $kind $instance $namespace -o flat | grep Pod | awk '{print $3}' | sed 's/:/ /'g | awk '{print $2}'`)
    #cr_output=$($KUBEPLUS_HOME/plugins/kubediscovery-linux connections $kind $instance $namespace -o json)
    #python /$KUBEPLUS_HOME/plugins/crlogs.py $cr_output $namespace
#else
#    echo "$OSTYPE not supported."
#	exit
#fi

#if [ ${#podlist[@]} -eq 0 ];
#then
#	echo "No Pod found connected to Custom Resource $1 named $2 in Namespace $namespace."
#else
        #echo "Pods for Custom Resource $1 named $2 in Namespace $namespace."
        #for i in "${podlist[@]}"; do echo "$i"; done
#        for p in "${podlist[@]}"; do
#            python $KUBEPLUS_HOME/plugins/crlogs.py $p $namespace
#        done;
#fi
