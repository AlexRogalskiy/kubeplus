MySQL Operator
---------------

In this example we will deploy Oracle MySQL Operator (https://github.com/oracle/mysql-operator).


Setup:
-------
- Download Minikube (v0.30.0), download Helm (v2.11.0)


Steps:
-------

1) minikube start --memory 4096

2) git clone https://github.com/cloud-ark/kubeplus.git

3) cd kubeplus

4) Setup Helm Service Account
   - kubectl create -f helm.yaml

5) Setup Helm
   - helm init --service-account helm

6) Wait till Tiller Pod is running
   - kubectl get pods -n kube-system

7) Once Tiller Pod is ready, deploy Kubeplus
   - kubectl apply -f deploy/

8) Wait till kubeplus is ready (3/3 Ready containers)
   - kubectl get pods

9) cd examples/mysql

10) Deploy MySQL Operator
   - helm install https://github.com/cloud-ark/operatorcharts/blob/master/mysql-operator-chart-0.2.1.tgz?raw=true

11) Wait till MySQL Operator Pod is ready. This Operator is deployed in namespace 'mysql-operator'
    - kubectl get ns
    - kubectl get pods -n mysql-operator

12) Find information about various Custom Kinds registered by Oracle MySQL Operator
    - kubectl describe customresourcedefinition mysqlclusters.mysql.oracle.com

13) Setup Service account for MySQL Operator
    - kubectl apply -f mysql-operator-sa.yaml

14) Create MySQL Cluster resource
    - kubectl create -f mysql-cluster.yaml

15) Verify MySQL cluster
    - Wait till MySQL Pods are running
      - kubectl get pods (there should be mysql pods displayed)

    - Retrieve password to connect to the cluster
      - kubectl -n default get mysqlclusters
      - kubectl -n default get secret mysql-root-password -o jsonpath="{.data.password}" | base64 --decode

    - Connect to the cluster
      - kubectl run mysql-client --image=mysql:5.7 -it --rm --restart=Never \
        > -- mysql -h mysql -uroot -p<password-from-previous-step-output> -e 'SELECT 1'

Troubleshooting
----------------

1) Get KubePlus logs
   - kubectl get pod <kubeplus-pod> -c operator-manager
   - kubectl get pod <kubeplus-pod> -c operator-deployer
   - kubectl get pod <kubeplus-pod> -c kube-discovery-apiserver

2) Check Helm Deployments
   - helm list
