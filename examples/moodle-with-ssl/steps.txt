Moodle with SSL
---------------

In this example we will setup two moodle instances with SSL. We will use GKE for Kubernetes Cluster.
You will need two domain names. In the experiment below we have registered two domain names
(www.moodle1.net and www.moodle2.net) with Amazon Route53. 

We are using three Kubernetes Operators in this setup:
- Moodle Operator (from CloudARK) -> For managing Moodle instances including which plugins to be installed on each instance
- MySQL Operator (from PressLabs) -> For managing MySQL instances including when to take backups of each MySQL instance
- SSL Certificate Operator (from JetStack) -> For provisioning LetsEncrypt certificates for each Moodle endpoint

For certificate creation we are using the HTTP-01 challenge provider from cert-manager. 

Setup:
-------
- Create single node GKE cluster
- Configure your kubectl to connect to the GKE cluster
  - gcloud container clusters get-credentials <cluster-name> --zone <zone-name>
- Register two Domain names on AWS Route53
- Use Helm v2 for this example.

Steps:
------
1. Install Helm
   - kubectl create -f tiller-rbac.yaml
   - helm init --service-account tiller
   - Wait for tiller pod to become Running
     - kubectl get pods -n kube-system

2. Install Nginx Ingress controller
   - helm install stable/nginx-ingress --name nginx

3. Configure both the Domain names on AWS Route53 with Ingress controller IP
   - kubectl get svc
     -> Wait till nginx-ingress-controller gets an EXTERNAL-IP
     -> Once it is available add a Hosted Zone with Type A record with EXTERNAL-IP set

4. Install cert-manager
   - kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.8/deploy/manifests/00-crds.yaml
   - kubectl create namespace cert-manager
   - kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true
   - helm repo add jetstack https://charts.jetstack.io
   - helm repo update
   - helm install --name cert-manager --namespace cert-manager --version v0.8.0 jetstack/cert-manager

5. Install MySQL Operator and Moodle Operator
   - helm install https://github.com/cloud-ark/operatorcharts/blob/master/mysql-operator-0.2.5-1.tgz?raw=true
   - helm install https://github.com/cloud-ark/operatorcharts/blob/master/moodle-operator-chart-0.4.7.tgz?raw=true

6. Wait till all Operator Pods are ready
   - kubectl get pods

7. Deploy Moodle1
   - cd moodle1
   - Create Certificate Issuer Custom Resource Instance
     - kubectl create -f issuer1.yaml
   - Create MySQLCluster Custom Resource Instance
     - kubectl create -f cluster1-secret.yaml
     - kubectl create -f cluster1.yaml
   - Wait till MySQLCluster Resource is ready
     - kubectl get pods
   - Create Moodle1 Custom Resource Instance
     - kubectl create -f moodle1.yaml
   - Wait till Moodle1 Resource is ready
     - kubectl get pods

8. Access the Moodle1 instance's Domain Name through browser (https://www.moodle1.net)
    - You will have to add a security exception as we are using the Staging ACME server for generating the certificates.
      These are untrusted certificates.
    - Once exception is added, you should be able to access Moodle's login page on the Domain name.

    - Generating a trusted certificate
      - Change the 'server' attribute in issuer.yaml to: https://acme-v02.api.letsencrypt.org/directory
      - Delete the all the resources and try again.

9. Deploy Moodle2
   - cd ../moodle2
   - Create Certificate Issuer Custom Resource Instance
     - kubectl create -f issuer2.yaml
   - Create MySQLCluster Custom Resource Instance
     - kubectl create -f cluster2-secret.yaml
     - kubectl create -f cluster2.yaml
   - Wait till MySQLCluster Resource is ready
     - kubectl get pods
   - Create Moodle1 Custom Resource Instance
     - kubectl create -f moodle2.yaml
   - Wait till Moodle2 Resource is ready
     - kubectl get pods

10. Access the Moodle2 instance's Domain Name through browser (https://www.moodle2.net)
    - You will have to add a security exception as we are using the Staging ACME server for generating the certificates.
      These are untrusted certificates.
    - Once exception is added, you should be able to access Moodle's login page on the Domain name.


   


