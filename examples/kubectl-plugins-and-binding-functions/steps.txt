Cluster Admin:
--------------
1. git clone https://github.com/cloud-ark/kubeplus.git

2. Deploy KubePlus:
   cd scripts
   ./deploy-kubeplus.sh
 
   cd ..
   export KUBEPLUS_HOME=`pwd`
   export PATH=$KUBEPLUS_HOME/plugins/:$PATH

2. Install Operator Helm Charts - Mysql Operator, Moodle Operator
   - helm install https://github.com/cloud-ark/operatorcharts/blob/master/mysql-operator-0.2.5-5.tgz?raw=true
   - helm install https://github.com/cloud-ark/operatorcharts/blob/master/moodle-operator-chart-0.5.0.tgz?raw=true

3. Check pods
   - kubectl get pods; wait till the Operator Pods and KubePlus Pods are ready


Platform Engineer:
-------------------
1. Create cluster-secret
   - kubectl create -f cluster-secret.yaml

2. Create cluster1.yaml
   - kubectl create -f cluster1.yaml

3. Show connections of cluster1
   - kubectl connections MysqlCluster cluster1 default

4. Check if cluster1 pods are ready
   - kubectl get pods

5. Once cluster1 pods are ready, create Moodle instance

6. Show Moodle instance
    - more moodle1.yaml
    - Check definition of binding functions: Fn::ImportValue() and Fn::AddLabel() 

8. kubectl create -f moodle1.yaml

9. kubectl describe moodles moodle1
    - Highlight the resolved service name

10. Check MysqlCluster Service labels
    - kubectl get svc cluster1-mysql-master -o json | grep 'moodle1'

11. See moodle1 connections
    - kubectl connections Moodle moodle1 default

12. Check Moodle connections:
    - kubectl connections Moodle moodle1 default

13. Check CRD
    - kubectl get customresourcedefinitions
    - kubectl describe customresourcedefinitions moodles.moodlecontroller.kubeplus
      - Check the 'resource' annotations on the Moodle CRD
    - kubectl describe customresourcedefinitions mysqlclusters.mysql.presslabs.org
      - Check the 'resource' annotations on MysqlCluster CRD

